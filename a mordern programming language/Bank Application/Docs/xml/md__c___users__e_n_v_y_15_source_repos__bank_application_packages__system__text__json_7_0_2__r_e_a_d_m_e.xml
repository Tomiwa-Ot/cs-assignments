<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="md__c___users__e_n_v_y_15_source_repos__bank_application_packages__system__text__json_7_0_2__r_e_a_d_m_e" kind="page">
    <compoundname>md_C__Users_ENVY_15_source_repos_BankApplication_packages_System_Text_Json_7_0_2_README</compoundname>
    <title>About</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provides high-performance and low-allocating types that serialize objects to JavaScript Object Notation (JSON) text and deserialize JSON text to objects, with UTF-8 support built-in. Also provides types to read and write JSON text encoded as UTF-8, and to create an in-memory document object model (DOM), that is read-only, for random access of the JSON elements within a structured view of the data.</para>
<para>The <computeroutput>System.Text.Json</computeroutput> library is built-in as part of the shared framework in .NET Runtime. The package can be installed when you need to use it in other target frameworks.</para>
<para>For more information, see the documentation:</para>
<para><itemizedlist>
<listitem><para><ulink url="https://docs.microsoft.com/dotnet/standard/serialization/system-text-json-overview">JSON serialization and deserialization in .NET</ulink></para>
</listitem><listitem><para><ulink url="https://docs.microsoft.com/dotnet/standard/serialization/system-text-json-how-to">How to serialize and deserialize JSON in .NET</ulink></para>
</listitem><listitem><para><ulink url="https://docs.microsoft.com/dotnet/api/system.text.json">System.Text.Json API reference</ulink> </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="C:/Users/ENVY 15/source/repos/BankApplication/packages/System.Text.Json.7.0.2/README.md"/>
  </compounddef>
</doxygen>
